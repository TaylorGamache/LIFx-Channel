{
    "swagger": "2.0",
    "info": {
        "title": "Email Digest Channel API",
        "description": "Email Digest Service",
        "version": "1.0.0"
    },
    "host": "localhost:3000",
    "schemes": [
        "http"
    ],
    "basePath": "/api/v1",
    "produces": [
        "application/json"
    ],
    "paths": {
		"/lifx/{recipeID}": {
            "post": {
                "summary": "Do try and do a LIFx Action with the given recipeID.",
                "description": "This endpoint tries to preform a LIFx Action depending on if there is a matching recipeID in the database.",
                "parameters": [
                    {
                        "name": "recipeID",
                        "in": "path",
                        "description": "Unique identifier of a recipe/LIFx Action",
                        "required": true,
                        "type": "string"
                    }
                ],
				"tags": [
					"LIFx"
				],
				"responses": {
					"200": {
						"description": "Success message",
						"schema": {
							"$ref": "#/definitions/Success"
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
			
		},
        "/lifx/new": {
            "post": {
              "summary": "Add/Update an LIFx action to the database.",
              "description": "This endpoint is used to add a LIFx action for the LIFx service",
                "parameters": [
                    {
                        "name": "LIFx Action",
                        "in": "body",
                        "description": "LIFx Action JSON to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LIFxAc"
                        }
                    }
                ],
                "tags": [
                    "LIFx"
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/lifx/delete/{recipeID}": {
            "post": {
                "summary": "Delete a LIFx action from the database.",
                "description": "This endpoint deletes a LIFx action from the database with the matching recipeID",
                "parameters": [
                    {
                        "name": "recipeID",
                        "in": "path",
                        "description": "Unique identifier of a recipe/LIFx Action",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "LIFx"
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "LIFxAc": {
            "properties": {
				"type": {
                    "type": "string",
                    "description": "The type of action (turnOn, turnOff, scene, toggleLight, changeColor, breath, blink)."
                },
				"recipeid": {
                    "type": "string",
                    "description": "The ID of the recipe."
                },
				"action": {
                    "description": "The body of the Email.",
					"$ref": "#/definitions/AC"
                }
            }
        },
		"AC": {
            "properties": {
				"lightID": {
                    "type": "string",
                    "description": "The type of action (turnOn, turnOff, scene, toggleLight, changeColor, breath, blink)."
                },
				"transDur": {
                    "type": "string",
                    "description": "The duration of the action."
                },
				"color": {
                    "type": "string",
                    "description": "The color of the bulb (white, red, orange, yellow, cyan, green, blue, purple, or pink)."
                },
				"scene": {
                    "type": "string",
                    "description": "The ID of the scene you want."
                },
				"numBreathe": {
                    "type": "string",
                    "description": "The number of times you want the light to breathe."
                },
				"numBlink": {
                    "type": "string",
                    "description": "The number of times you want the light to blink."
                },
				"brightness": {
                    "type": "string",
                    "description": "The brightness of the bulb (0-1)."
                },
				"advOption": {
                    "type": "string",
                    "description": "advanced options for the action."
                }
            }
        },
		
        "Success": {
            "properties": {
                "success": {
                    "type": "boolean",
                    "description": "Whether the request was successful or not"
                },
                "msg": {
                    "type": "string",
                    "description": "Success or error message"
                },
                "email": {
                    "description": "Email object returned",
                    "$ref": "#/definitions/LIFxAc"
                }
            }
        },
        "Error": {
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                }
            }
        }
    }
}


